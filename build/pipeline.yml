trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'rg-bicep-dev-001-sp'  
  productName: bicep
  location: 'westeurope'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Build
    workspace:
      clean: all    
    steps:
    - task: CopyFiles@2
      displayName: 'pack infrastructure as code'
      inputs:
        SourceFolder: src/arm
        Contents: '*'
        TargetFolder: '$(build.artifactstagingdirectory)/arm'

    - task: PublishBuildArtifacts@1
      displayName: 'publish arm artifacts'
      inputs:
        pathToPublish: '$(build.artifactstagingdirectory)/arm'
        ArtifactName: $(productName)

    - task: DotNetCoreCLI@2
      displayName: 'publish function api'
      inputs:
        command: publish
        publishWebProjects: false
        projects: ./src/function.api/function.csproj
        arguments: '-c release -o $(build.artifactstagingdirectory)/apis'        

    - task: PublishBuildArtifacts@1
      displayName: 'publish artifacts'
      inputs:
        pathToPublish: '$(build.artifactstagingdirectory)'
        artifactName: $(productName)
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy
  variables:
    resourceGroupName: 'rg-bicep-$(environment)-001'
    environment: dev
  jobs:
  - deployment: DeployInfrastructure
    displayName: Deploy Infrastructure
    environment: dev
    strategy: 
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            displayName: 'deploy infrastructure'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: pscore
              scriptLocation: 'inlineScript'
              inlineScript: |
                az -v
                az group create -n $(resourceGroupName) -l $(location)
                az deployment group create -f ./main.bicep -g $(resourceGroupName) --parameters environment=$(environment)
              workingDirectory: '../$(productName)'
            condition: always()
